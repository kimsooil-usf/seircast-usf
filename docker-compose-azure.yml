# https://cookiecutter-django.readthedocs.io/en/latest/developing-locally-docker.html#
# Local development of Django.
version: '3'
# 3 name volumes are named here.
volumes:
    postgresdata:
        driver: azure_file
        driver_opts:
        share_name: postgresdata
        storage_account_name: usfmystorageaccount
    djangomedia:
        driver: azure_file
        driver_opts:
        share_name: djangomedia
        storage_account_name: usfmystorageaccount
    djangostatic:
        driver: azure_file
        driver_opts:
        share_name: djangostatic
        storage_account_name: usfmystorageaccount
    covidmodel:
        driver: azure_file
        driver_opts:
        share_name: covidmodel
        storage_account_name: usfmystorageaccount
    hashinput:
        driver: azure_file
        driver_opts:
        share_name: hashinput
        storage_account_name: usfmystorageaccount
    hashoutput:
        driver: azure_file
        driver_opts:
        share_name: hashoutput
        storage_account_name: usfmystorageaccount
services:
    # Postgresql database settings.
    #postgresdb:
        #image: postgres:9.6-alpine
        #environment:
            #- POSTGRES_DB
            #- POSTGRES_USER
            #- POSTGRES_PASSWORD
        #restart: unless-stopped
        #volumes:
            #- postgresdata:/var/lib/postgresql/data
        #ports:
            #- "127.0.0.1:5432:5432"
            #- 5432:5432
        #networks:
            #- backend
    # Django settings.
    djangoweb:
        #build:
            #context: .
            #args:
                #- DJANGO_ENVIRONMENT=${DJANGO_ENVIRONMENT:-production}
        #image: djangoapp:latest
        image: seircastusf.azurecr.io/djangoweb
        #networks:
            #- backend
            #- frontend
        volumes:
            - .:/app/
            - djangostatic:/var/staticfiles
            - djangomedia:/var/mediafiles
            - hashinput:/app/hash_files/input/
            - hashoutput:/app/hash_files/output/
        ports: # IMPORTANT: Make sure to use 127.0.0.1 to keep it local. Otherwise, this will be broadcast to the web.
            #- 127.0.0.1:8000:8000
            - 8000:8000
        depends_on:
            - postgresdb
            #- mailhog
        environment:
            - POSTGRES_DB=django
            - POSTGRES_USER=xjqwscoxuq
            - POSTGRES_PASSWORD=Q85CU8NJA65CO1GL$
            - POSTGRES_HOST=seircast-postgresdb.postgres.database.azure.com
            - POSTGRES_PORT
            - DJANGO_SETTINGS_MODULE
            - FORCE_SCRIPT_NAME
            - DJANGO_ENVIRONMENT
            - SECRET_KEY
            - DJANGO_ALLOWED_HOSTS
            - DJANGO_EMAIL_HOST=mailhog
            - DJANGO_EMAIL_PORT=1025
            - DJANGO_EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
            - ADMIN_USERNAME
            - ADMIN_EMAIL
            - ADMIN_PASSWORD
            - ADMIN_RESET
            - MODEL_API_BASE_URL
            - MODEL_API_BASE_URLS
            - AWS_SECRET_ACCESS_KEY_ID
            - AWS_ACCESS_KEY_ID
            - AWS_STORAGE_BUCKET_NAME
            - AWS_REGION_NAME
            - DJANGO_API_DEFAULT_SIM_LENGTH
            - AZURE_URI
            - AZURE_FUNCTION_KEY
        links:
            - "postgresdb"
    model:
        #image: zazu.crc.nd.edu/covid/models:latest
        image: seircast.azurecr.io/covid/model:latest
        restart: unless-stopped
        networks:
            - backend
            - frontend
        volumes:
            - covidmodel:/app/out
        ports:
            #- "127.0.0.1:5000:5000"
            - 5000:5000
    dashboard:
        image: seircastusf.azurecr.io/dashboard
        #build:
            #context: ./covid-dashboard
            #dockerfile: Dockerfile
        depends_on:
            - djangoweb
        ports:
            - 80:80
        networks:
            - backend
            - frontend
networks:
    frontend:
    backend: